//- appears on refresh
extends groupInfo
append head
    link(rel="stylesheet", href="/stylesheets/tasks.css")
    link(rel="stylesheet", href="/stylesheets/groupInfo.css")
    script(src="/javascripts/index.js" type="module")

block group
    block group
        div.taskDetailsTopBar
            h1.taskNameHeader #{taskName}
            div
                if taskOwnerId === userId
                    form(action=`/users/${userId}/${groupId}/${taskId}/delete` method='post')
                        button.deleteTaskButtn(type='submit') Delete task
        div.assignedToAndBackBar
            p.assignedto Assigned To: #{taskOwnerName}
            a(class='groupDetailsButton' id="groupDetailsBttn" href=`/users/${userId}/${groupId}`) group Details
        if taskOwnerId !== userId
            div.dueDateForNonOwners Due Date: #{taskDueDate}
        if taskOwnerId === userId && taskCompleteStatus === true
            div.dueDateForNonOwners Due Date: #{taskDueDate}
        if taskCompleteStatus === true
            div.completedStatus task Completed
        if taskOwnerId === userId && taskCompleteStatus === false
            div.taskDetailsButtons
            div.taskHeader
                form.editingATask(action=`/users/${userId}/${groupId}/${taskId}` method='post')
                    input(type='hidden' name='_csrf' value=csrfToken)
                    .container
                        //- label(for='name')
                        input(type='input' name='name' value=`${taskName}` required)#editTaskNameBox
                        input(type='date' name='due_date' value=`${taskDueDate}` min="2021-10-20" max="2022-12-31" required)#editTaskDueDateBox
                        select(type=`${groupId === dashboard ? 'hidden': "select"}` name='assignTo' value= userId)
                            option(value= user.id)= user.username
                            each member in members.dataValues.groupToMember
                                option(value= member.id)= member.username
                        button(class='editTaskButton' type='submit' ) Edit task
            div.subTaskDetailsButtonContent
                form.addingASubTask(action=`/users/${userId}/${groupId}/${taskId}/addSubTask` method='post')
                    input(type='hidden' name='_csrf' value=csrfToken)
                    input(type='input' name='name' placeholder="Add a subtask..." required)#addTaskBox
                    button(class='addSubTaskButton' type='submit' ) Add Sub-task
        div.subTasksHeader Subtasks
        div.taskContainer
            ul.taskList(id="subTaskList")
                if Subtasks.length && taskCompleteStatus === false && taskOwnerId === userId
                    each sub in Subtasks
                        li.subTaskName= sub.dataValues.name
                            form.eachNewTask(action=`/users/${userId}/${groupId}/${taskId}/${sub.dataValues.id}/delete` method='post')
                                input(type='hidden' name='_csrf' value=csrfToken)
                                button.deleteSubTaskButtn(type='submit') Delete Subtask

                if Subtasks.length && taskCompleteStatus === false && taskOwnerId !== userId
                    each sub in Subtasks
                        li.subTaskName= sub.dataValues.name
                            form.eachNewTask(action=`/users/${userId}/${groupId}/${taskId}/${sub.dataValues.id}/delete` method='post')

                if Subtasks.length && taskCompleteStatus === true
                    each sub in Subtasks
                        li.subTaskName= sub.dataValues.name
                            form.eachNewTask(action=`/users/${userId}/${groupId}/${taskId}/${sub.dataValues.id}/delete` method='post')
                each el in Array((15 - Subtasks.length) > 0 ? (15 - Subtasks.length) : 0)
                    li.subTaskName
